[versions]

h2 = "2.2.224"
kotlin = "1.9.10"
agp = "8.1.0"
compose = "1.5.1"
androidx-appcompat = "1.6.1"
androidx-activityCompose = "1.7.2"
compose-uitooling = "1.5.1"
libres = "1.1.8"
composeImageLoader = "1.6.7"
napier = "2.6.1"
buildConfig = "4.1.1"
kotlinx-coroutines = "1.7.3"
ktor = "2.3.4"
composeIcons = "1.1.0"
kotlinx-serialization = "1.6.0"
kotlinx-datetime = "0.4.1"
multiplatformSettings = "1.0.0"
koin = "3.4.3"
slf4j = "2.0.9"
exposed = "0.44.0"
jbcrypt = "0.4"
mockk = "1.13.8"
postgresql = "42.5.1"

viewmodel = "0.14"
#navigation = "1.4.0-alpha05"
navigation = "1.3.20"

settings = "1.0.0"
klock = "3.4.0"


[libraries]

androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-uitooling" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
jbcrypt = { module = "org.mindrot:jbcrypt", version.ref = "jbcrypt" }
libres = { module = "io.github.skeptick.libres:libres-compose", version.ref = "libres" }
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "composeImageLoader" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
composeIcons-featherIcons = { module = "br.com.devsrsouza.compose.icons:feather", version.ref = "composeIcons" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }


viewmodel = { module = "com.adeo:kviewmodel", version.ref = "viewmodel" }
viewmodel-compose = { module = "com.adeo:kviewmodel-compose", version.ref = "viewmodel" }
viewmodel-odyssey = { module = "com.adeo:kviewmodel-odyssey", version.ref = "viewmodel" }

navigation-core = { module = "io.github.alexgladkov:odyssey-core", version.ref = "navigation" }
navigation-compose = { module = "io.github.alexgladkov:odyssey-compose", version.ref = "navigation" }

settings = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "settings" }

klock-common = { module = "com.soywiz.korlibs.klock:klock", version.ref = "klock" }
klock-jvm = { module = "com.soywiz.korlibs.klock:klock-jvm", version.ref = "klock" }

ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-contentnegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }


ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-validation = { module = "io.ktor:ktor-server-request-validation", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-crypt = { module = "org.jetbrains.exposed:exposed-crypt", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }

slf4j = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

postgresql = {module = "org.postgresql:postgresql", version.ref = "postgresql"}




[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-lib = { id = "com.android.library", version.ref = "agp" }
libres = { id = "io.github.skeptick.libres", version.ref = "libres" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
